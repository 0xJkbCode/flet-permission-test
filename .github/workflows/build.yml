name: Silver Bullet Build - Separate Watchdog

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.35.6'
  # We define the specific, problematic version here for clarity
  WATCHDOG_VERSION: '4.0.0'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Target Flutter SDK
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true
    
    # ===================================================================
    #               The Silver Bullet Dependency Installation
    # ===================================================================
    - name: Install Dependencies with custom watchdog build
      run: |
        # Step 1: Create a directory to store our custom-built wheel
        mkdir -p local_wheels
        
        # Step 2: Build the watchdog wheel using the legacy method
        echo "Building watchdog wheel with --no-use-pep517..."
        pip wheel --no-use-pep517 --wheel-dir=local_wheels watchdog==${{ env.WATCHDOG_VERSION }}
        
        # Step 3: Install everything. Pip will now find watchdog in our local folder first.
        echo "Installing all dependencies..."
        pip install --find-links=local_wheels .
    # ===================================================================

    # The surgery step remains the same
    - name: Patch flet-cli to accept modern Flutter
      run: |
        BUILD_PY_PATH=$(python -c "import flet_cli.commands.build as b; print(b.__file__)")
        echo "Found build.py at: $BUILD_PY_PATH"
        sed -i 's/MINIMAL_FLUTTER_VERSION = version.Version("3.29.2")/MINIMAL_FLUTTER_VERSION = version.Version("${{ env.FLUTTER_VERSION }}")/' "$BUILD_PY_PATH"
        echo "Patch complete."

    - name: Accept Android Licenses
      run: yes | flutter doctor --android-licenses

    - name: Build APK
      run: flet build apk --verbose

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: build/apk/app-release.apk