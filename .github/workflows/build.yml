name: Custom Template APK Build (Hijack Mode)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PYTHONUTF8: 1
  FLET_CLI_NO_RICH_OUTPUT: 1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # الخطوة 1: سحب كود المشروع الأساسي (flet-permission-test)
      - name: 1. Checkout Main Project Repo
        uses: actions/checkout@v4
        with:
          # بنحدد المسار اللي الكود هينزل فيه
          path: main_project

      # الخطوة 2: سحب كود القالب المُعدَّل في فولدر منفصل
      - name: 2. Checkout Custom Build Template
        uses: actions/checkout@v4
        with:
          repository: 0xJkbCode/custom_flet_template
          # بنحدد المسار اللي القالب هينزل فيه
          path: custom_template

      # الخطوة 3: تثبيت Python
      - name: 3. Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      # الخطوة 4: تثبيت Java (باستخدام الإصدار 17 اللي حددته)
      - name: 4. Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # الخطوة 5: تثبيت اعتماديات المشروع
      - name: 5. Install Project Dependencies
        # بنحدد الـ working-directory عشان pip يشتغل جوه فولدر المشروع
        working-directory: ./main_project
        run: pip install .

      # الخطوة 6: تنفيذ أمر البناء (الأمر الحاسم)
      - name: 6. Build APK with Custom Local Template
        # بنحدد الـ working-directory عشان flet يشتغل جوه فولدر المشروع
        working-directory: ./main_project
        run: flet build apk --verbose --template ../custom_template

      # الخطوة 7: رفع الـ APK الناتج
      - name: 7. Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          # بنحدد المسار الصحيح للـ APK بالنسبة للـ root
          path: main_project/build/apk/app-release.apk```