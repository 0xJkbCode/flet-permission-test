name: The B-M-I Strategy (Build, Modify, Install)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Target Flutter SDK
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.6' 
        channel: 'stable'
        cache: true

    # ===================================================================
    #              The Build-Modify-Install Strategy
    # ===================================================================
    - name: Install Dependencies via B-M-I Strategy
      run: |
        # Step 1: Download all packages (and their dependencies) to a temp folder without installing
        echo "Step 1: Downloading all packages..."
        pip download --dest ./temp_packages -r <(grep -o '".*"' pyproject.toml | tr -d '"')

        # Step 2: Perform surgery on the downloaded flet-cli metadata
        echo "Step 2: Performing surgery on flet-cli..."
        FLET_CLI_WHEEL=$(find ./temp_packages -name "flet_cli*.whl")
        echo "Found flet-cli wheel: $FLET_CLI_WHEEL"
        
        # Unzip the wheel to a temp directory to edit it
        unzip -q $FLET_CLI_WHEEL -d ./flet_cli_unpacked
        
        # Find the METADATA file
        METADATA_FILE=$(find ./flet_cli_unpacked -name "METADATA")
        echo "Found METADATA file at: $METADATA_FILE"
        
        # Perform the replacement
        sed -i 's/watchdog (>=4.0.0,<5.0.0)/watchdog==3.0.0/g' $METADATA_FILE
        echo "METADATA patched. New content:"
        cat $METADATA_FILE
        
        # Re-zip the wheel with the modified content
        (cd ./flet_cli_unpacked && zip -r ../patched_flet_cli.whl .)
        
        # Replace the original wheel with our patched one
        mv ./patched_flet_cli.whl $FLET_CLI_WHEEL

        # Step 3: Install everything from the local, patched packages
        echo "Step 3: Installing all packages from local cache..."
        pip install --no-index --find-links=./temp_packages -r <(grep -o '".*"' pyproject.toml | tr -d '"')
    # ===================================================================

    - name: Accept Android Licenses
      run: yes | flutter doctor --android-licenses

    - name: Build APK
      run: flet build apk --verbose

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: build/apk/app-release.apk